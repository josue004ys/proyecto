package com.example.proyecto.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Component;

import com.example.proyecto.entity.Especialidad;
import com.example.proyecto.entity.Paciente;
import com.example.proyecto.entity.RolUsuario;
import com.example.proyecto.repository.EspecialidadRepository;
import com.example.proyecto.repository.PacienteRepository;

/**
 * Inicializador m√≠nimo para datos administrativos b√°sicos
 * Solo crea especialidades b√°sicas y un usuario administrador
 */
@Component
public class AdminInitializer implements CommandLineRunner {

    @Autowired
    private EspecialidadRepository especialidadRepository;
    
    @Autowired
    private PacienteRepository pacienteRepository;
    
    @Autowired
    private BCryptPasswordEncoder passwordEncoder;

    @Override
    public void run(String... args) throws Exception {
        // Solo ejecutar si no hay datos (sistema completamente limpio)
        if (especialidadRepository.count() == 0) {
            System.out.println("üîß Inicializando datos administrativos m√≠nimos...");
            
            crearEspecialidadesBasicas();
            crearUsuarioAdmin();
            
            System.out.println("‚úÖ Datos administrativos inicializados correctamente");
        } else {
            System.out.println("‚ÑπÔ∏è Datos administrativos ya existen, no se inicializar√°n");
        }
    }

    private void crearEspecialidadesBasicas() {
        // Crear especialidades m√©dicas b√°sicas
        String[] especialidades = {
            "Medicina General",
            "Cardiolog√≠a", 
            "Dermatolog√≠a",
            "Pediatr√≠a",
            "Ginecolog√≠a",
            "Neurolog√≠a",
            "Traumatolog√≠a"
        };

        System.out.println("üìã Creando especialidades m√©dicas b√°sicas...");
        
        for (String nombreEsp : especialidades) {
            Especialidad especialidad = new Especialidad();
            especialidad.setNombre(nombreEsp);
            especialidad.setDescripcion("Especialidad m√©dica de " + nombreEsp.toLowerCase());
            especialidad.setActiva(true);
            
            especialidadRepository.save(especialidad);
            System.out.println("   ‚úì " + nombreEsp);
        }
    }

    private void crearUsuarioAdmin() {
        // Crear usuario administrador b√°sico
        System.out.println("üë®‚Äçüíº Creando usuario administrador...");
        
        Paciente admin = new Paciente();
        admin.setNombre("Administrador del Sistema");
        admin.setCorreo("admin@hospital.com");
        admin.setPassword(passwordEncoder.encode("admin123"));
        admin.setTelefono("000-000-0000");
        admin.setRol(RolUsuario.ADMINISTRADOR);
        
        pacienteRepository.save(admin);
        System.out.println("   ‚úì Usuario administrador creado");
        System.out.println("   üìß Email: admin@hospital.com");
        System.out.println("   üîë Password: admin123");
    }
}
